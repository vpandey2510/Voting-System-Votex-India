@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model VotingSystem.Models.Candidate

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Candidate</h4>
<hr />
@if (SignInManager.IsSignedIn(User))
{
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                
                <div class="form-group">
                    <label asp-for="Username" class="control-label"></label>
                    <!-- Set a fixed value for the Username and make the input field disabled -->
                    <input asp-for="Username" class="form-control" value="@User.Identity.Name" readonly />
                    <span asp-validation-for="Username" class="text-danger"></span>
                </div>
                
                <div class="form-group">
                    <label asp-for="AreaID" class="control-label"></label>
                    <select asp-for="AreaID" class="form-control" asp-items="ViewBag.AreaID"></select>
                </div>
                <div class="form-group">
                    <label asp-for="ElectionID" class="control-label"></label>
                    <select asp-for="ElectionID" class ="form-control" asp-items="ViewBag.ElectionID"></select>
                </div>
                <div class="form-group">
                    <label asp-for="PartyID" class="control-label"></label>
                    <select asp-for="PartyID" class ="form-control" asp-items="ViewBag.PartyID"></select>
                </div>
                @*<div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Verified" /> @Html.DisplayNameFor(model => model.Verified)
                </label>
            </div>*@
                <div class="form-group">
                    <label asp-for="Position" class="control-label"></label>
                    <input asp-for="Position" class="form-control" />
                    <span asp-validation-for="Position" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
}


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
