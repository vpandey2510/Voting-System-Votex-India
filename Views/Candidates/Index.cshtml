@model IEnumerable<VotingSystem.Models.Candidate>

<style>
    /* Styling similar to the Election Index */
    body {
        background-color: #f0f4f8;
        color: #333;
        font-family: 'Poppins', sans-serif !important;
    }

    .container {
        width: 100%;
        max-width: 1200px;
        margin: 0 auto;
    }

    .card {
        background-color: #ffffff; /* White background for the card */
        border-radius: 10px; /* Rounded corners */
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); /* Soft shadow */
        transition: transform 0.2s; /* Transition effect for hover */
        margin-bottom: 30px; /* Space below each card */
        padding: 20px; /* Padding inside the card */
        position: relative; /* Position context for absolute elements */
        max-width: 360px;
        min-width: 360px;
    }

        .card:hover {
            transform: scale(1.05); /* Slight zoom effect on hover */
        }


    /* Responsive adjustments for cards */
    .card-container {
        display: flex; /* Flex display for card container */
        flex-wrap: wrap; /* Allow cards to wrap onto the next line */
        margin-top: 20px; /* Space above the card container */
        /*justify-content: space-between; Space between cards */
        gap: 20px; /* Gap between cards */
    }

    .card-body {
        display: flex;
        flex-direction: column;
        align-items: center; /* Center align card content */
        justify-content: space-between; /* Distribute content evenly */
    }

    .alert {
        margin-top: 20px; /* Space above the alert */
        text-align: center; /* Center alert text */
    }

    .card-img-top {
        width: 100%;
        height: 200px;
        object-fit: cover;
        border-radius: 10px;
    }

    .btn-primary {
        background-color: #6c63ff;
        border: none;
        border-radius: 20px;
        padding: 10px 20px;
        transition: background-color 0.3s;
    }

        .btn-primary:hover {
            background-color: #5a55d6;
        }

    .btn-verify {
        background-color: #6c63ff;
        color: white;
        border: none;
        border-radius: 20px;
        padding: 10px 20px;
        transition: background-color 0.3s;
    }

        .btn-verify:hover {
            background-color: #5a55d6;
        }
</style>

<div class="container mt-5">
    <h2>Candidates</h2>

    <div class="card-container" id="candidateCards">
        @foreach (var candidate in Model)
        {
            <div class="card candidate-card">
                <img class="card-img-top" src="@candidate.CandidateImagePath" alt="Candidate">
                <div class="card-body">
                    <h5 class="card-title">@candidate.Name</h5>
                    <p class="card-text">Area: @candidate.Area.Name</p>
                    <p class="card-text">Party: @candidate.Party.Name</p>

                    <div class="d-flex justify-content-between" style="width: 310px !important">
                        <a href="@Url.Action("Details", "Candidates", new { id = candidate.CandidateID })" class="btn btn-primary">View Details</a>

                        <button class="btn btn-verify"
                                data-id="@candidate.CandidateID"
                                data-verified="@candidate.Verified">
                            @(candidate.Verified ? "Un-Verify" : "Verify")
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.btn-verify').on('click', function () {
                const button = $(this);
                const candidateId = button.data('id');
                const currentStatus = button.data('verified');
                const newStatus = !currentStatus; // Toggle verification status
                const token = $('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    url: '@Url.Action("Verify", "Candidates")',
                    type: 'POST',
                    data: {
                        id: candidateId,
                        isVerified: newStatus,
                        __RequestVerificationToken: token
                    },
                    success: function (response) {
                        if (response.success) {
                            // Update button text and data-verified attribute
                            button.text(newStatus ? "Un-Verify" : "Verify");
                            button.data('verified', newStatus);
                            // Update Verified text
                            button.closest('.candidate-card').find('p:contains("Verified")')
                                .text(`Verified: ${newStatus ? "Yes" : "No"}`);
                        } else {
                            alert('Error: ' + response.message);
                        }
                    },
                    error: function () {
                        alert('Error updating verification status.');
                    }
                });
            });
        });
    </script>
}
