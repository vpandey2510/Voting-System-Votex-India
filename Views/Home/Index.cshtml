@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext _context


@{
    ViewData["Title"] = "Home Page";
}


<div class="container-home">
<div class="container">
    <section class="carouselSection">
        <div id="voteXCarousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-indicators">
                <button type="button" data-bs-target="#voteXCarousel" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
                <button type="button" data-bs-target="#voteXCarousel" data-bs-slide-to="1" aria-label="Slide 2"></button>
                <button type="button" data-bs-target="#voteXCarousel" data-bs-slide-to="2" aria-label="Slide 3"></button>
                <button type="button" data-bs-target="#voteXCarousel" data-bs-slide-to="3" aria-label="Slide 4"></button>
            </div>
            <div class="carousel-inner">
                <div class="carousel-item active">
                        <img src="https://downhomenc.org/wp-content/uploads/2022/07/July-2022-Dem-Series-Wordpress-Banner-1.gif" class="d-block w-100" alt="Vote Smart">
                    <div class="carousel-caption d-none d-md-block">
                        <h5>Vote Smart</h5>
                        <p>Make informed decisions in every election.</p>
                    </div>
                </div>
                <div class="carousel-item">
                    <img src="https://wp.technologyreview.com/wp-content/uploads/2018/08/blockchainillo_0-11.gif" class="d-block w-100" alt="Secure Voting">
                    <div class="carousel-caption d-none d-md-block">
                        <h5>Secure Voting</h5>
                        <p>Your votes are safe and confidential with VoteX.</p>
                    </div>
                </div>
                <div class="carousel-item">
                    <img src="https://lavkush.co.in/wp-content/uploads/2024/03/IMG_0205.gif" class="d-block w-100" alt="Join the Democracy">
                    <div class="carousel-caption d-none d-md-block">
                        <h5>Join the Democracy</h5>
                        <p>Be a part of the change, vote today!</p>
                    </div>
                </div> 
                <div class="carousel-item">
                        <img src="https://newscoverage.agency/wp-content/uploads/2024/05/ca3e777621f9d9834cea24ee48275d10.gif" class="d-block w-100" alt="Know who you Vote">
                     <div class="carousel-caption d-none d-md-block">
                         <h5>Know who you Vote</h5>
                         <p>Get to know your Votees, choose what suits!</p>
                     </div>
                </div>
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#voteXCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#voteXCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </section>

    <section class="current">
            <h2 class="text-center justify-content-center"><strong>Ongoing Elections</strong></h2>
            <div class="scrollable-card-wrapper">
                <button class="scroll-arrow left-arrow" aria-label="Scroll Left">&lt;</button>
                <div class="scrollable-card-container">
                    @foreach (var election in _context.Elections)
                    {
                        if (election.Status == "Open")
                        {
                            <div class="home-card">
                                <a href="@Url.Action("Details", "Elections", new { id = election.ElectionID })" style="text-decoration: none;">
                                    <img class="card-img-top" src="@election.ElectionImagePath" alt="@election.Name" />
                                    <div class="card-body">
                                        <h3 class="card-title">@election.Name</h3>
                                        <p class="card-text">@DateOnly.FromDateTime(election.StartDate)</p>
                                        <p class="card-text">@election.Status</p>
                                        <div class="vote d-flex justify-content-center" style="width: 310px !important ">
                                            <a id="vote" href="@Url.Action("CastVoteForm", "Votes", new { electionId = election.ElectionID })" class="btn btn-primary">Vote</a>
                                        </div>
                                    </div>
                                </a>
                            </div>
                        }
                    }
                </div>
                <button class="scroll-arrow right-arrow" aria-label="Scroll Right">&gt;</button>
            </div>
        </section>

    <section class="upcoming">
            <h2 class="text-center justify-content-center"><strong>Upcoming Elections</strong></h2>
            <div class="scrollable-card-wrapper">
                <button class="scroll-arrow left-arrow" aria-label="Scroll Left">&lt;</button>
                <div class="scrollable-card-container">
                    @foreach (var election in _context.Elections)
                    {
                        if (election.StartDate > DateTime.Now)
                        {
                            <div class="home-card">
                                <a href="@Url.Action("Details", "Elections", new { id = election.ElectionID })" style="text-decoration: none;">
                                <img class="card-img-top" src="@election.ElectionImagePath" alt="@election.Name" />
                                <div class="card-body">
                                    <h3 class="card-title">@election.Name</h3>
                                    <p class="card-text">@DateOnly.FromDateTime(election.StartDate)</p>
                                    <p class="card-text">@election.Status</p>      
                                </div>
                                </a>
                            </div>
                        }
                    }
                </div>
                <button class="scroll-arrow right-arrow" aria-label="Scroll Right">&gt;</button>
            </div>
        </section>

        <section class="past">
            <h2 class="text-center justify-content-center"><strong>Past Elections</strong></h2>
            <div class="scrollable-card-wrapper">
                <button class="scroll-arrow left-arrow" aria-label="Scroll Left">&lt;</button>
                <div class="scrollable-card-container">
                    @foreach (var election in _context.Elections)
                    {
                        if (election.Status == "Closed")
                        {
                            <div class="home-card">
                                <a href="@Url.Action("Details", "Elections", new { id = election.ElectionID })" style="text-decoration: none;">
                                    <img class="card-img-top" src="@election.ElectionImagePath" alt="@election.Name" />
                                    <div class="card-body">
                                        <h3 class="card-title">@election.Name</h3>
                                        <p class="card-text">@DateOnly.FromDateTime(election.StartDate)</p>
                                        <p class="card-text">@election.Status</p>
                                        <div class="vote d-flex justify-content-center" style="width: 310px !important ">
                                            <a id="vote" href="@Url.Action("ElectionResult", "Votes", new { electionId = election.ElectionID })" class="btn btn-primary">View Result</a>
                                        </div>
                                    </div>
                                </a>
                            </div>
                        }
                    }
                </div>
                <button class="scroll-arrow right-arrow" aria-label="Scroll Right">&gt;</button>
            </div>
        </section>

        <section id="Feedback">
            <div class="feedback-section">
                <h2 style="font-family: 'Bugaki', sans-serif !important;">Please provide your feedback</h2>
                <p>Your feedback is valuable to us. Help us become better!!</p>
                @await Html.PartialAsync("~/Views/Shared/_FeedbackForm.cshtml", new VotingSystem.Models.Feedback())
                @if (TempData["FeedbackMessage"] != null)
                {
                    <script>
                        document.addEventListener("DOMContentLoaded", function () {
                            alert("@TempData["FeedbackMessage"]");
                        });
                    </script>
                }

            </div>
        </section>

        
</div>

</div>


<script>
    document.addEventListener("DOMContentLoaded", () => {
        const container = document.querySelector('.scrollable-card-container');
        const leftArrow = document.querySelector('.left-arrow');
        const rightArrow = document.querySelector('.right-arrow');
        const scrollStep = 300; // Adjust scrolling step size

        // Scroll left
        leftArrow.addEventListener('click', () => {
            container.scrollBy({
                left: -scrollStep,
                behavior: 'smooth',
                });
        });

            // Scroll right
        rightArrow.addEventListener('click', () => {
            container.scrollBy({
                left: scrollStep,
                behavior: 'smooth',
                });
            });
        });
</script>

